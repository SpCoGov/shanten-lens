from typing import Protocol, List, Dict, Optional, Callable, Tuple


class GameBot(Protocol):
    # 生命周期
    def bind(self) -> bool: ...

    def refresh(self) -> bool: ...

    def giveup(self, delay_sec: float = 3) -> Tuple[bool, str, Optional[dict]]: ...

    def start_game(self, delay_sec: float = 3) -> Tuple[bool, str, Optional[dict]]: ...

    def op_tsumo(self, delay_sec: float = 3) -> Tuple[bool, str, Optional[dict]]: ...

    def op_skip_change(self, delay_sec: float = 3) -> Tuple[bool, str, Optional[dict]]: ...

    def op_change(self, tile_ids: List[int], delay_sec: float = 3) -> Tuple[bool, str, Optional[dict]]: ...

    def discard_by_tile_id(
            self,
            tile_id: int,
            allow_tsumogiri: bool = True
    ) -> Tuple[bool, str, Optional[dict]]: ...

    def select_free_effect(self, selected_id: int, delay_sec: float = 3) -> Tuple[bool, str, Optional[dict]]: ...

    def select_reward_effect(self, selected_id: int, delay_sec: float = 3) -> Tuple[bool, str, Optional[dict]]: ...

    def select_effect(self, selected_id: int, delay_sec: float = 3) -> Tuple[bool, str, Optional[dict]]: ...

    def buy_pack(self, good_id: int, delay_sec: float = 3) -> Tuple[bool, str, Optional[dict]]: ...

    def refresh_shop(self, delay_sec: float = 3) -> Tuple[bool, str, Optional[dict]]: ...

    def sell_effect(self, uid: int, delay_sec: float = 3) -> Tuple[bool, str, Optional[dict]]: ...

    def end_shopping(self, delay_sec: float = 3) -> Tuple[bool, str, Optional[dict]]: ...

    def next_level(self, delay_sec: float = 3) -> Tuple[bool, str, Optional[dict]]: ...
